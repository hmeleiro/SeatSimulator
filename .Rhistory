limits = us_house$party_short)
representatives
nacional_results$color <- NA
nacional_results$color <- NA
nacional_results$color <- c("#EF1C25", "#612d62", "yellow", "#242E7C", "#00914A", "#B1CE00", "#FFDD02", "#FB5000", "#66bc29", "03A2DD")
congreso <- parliament_data(election_data = nacional_results,
type = "semicircle",
parl_rows = 10,
party_seats = nacional_results$seats)
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color,
limits = congreso$Party)
representatives
nacional_results$color <- NA
nacional_results$color <- c("#EF1C25", "#612d62", "yellow", "#242E7C", "#00914A", "#B1CE00", "#FFDD02", "#FB5000", "#66bc29", "#03A2DD")
congreso <- parliament_data(election_data = nacional_results,
type = "semicircle",
parl_rows = 10,
party_seats = nacional_results$seats)
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color,
limits = congreso$Party)
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color)
representatives
congreso$color
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados")
representatives
congreso
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color,
limits = congreso$Party)
representatives
congreso$Party
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = unique(congreso$color),
limits = congreso$Party)
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color,
limits = congreso$Party)
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados")
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color)
representatives
congreso$color
nacional_results$color <- NA
nacional_results$color <- c("#EF1C25", "#612d62", "#C10F19", "#242E7C", "#00914A", "#B1CE00", "#FFDD02", "#FB5000", "#66bc29", "#03A2DD")
congreso <- parliament_data(election_data = nacional_results,
type = "semicircle",
parl_rows = 10,
party_seats = nacional_results$seats)
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color)
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = congreso$Party)
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = as.character(congreso$Party) )
representatives
germany <- election_data %>%
filter(year == 2017 &
country == "Germany")
germany
germany$party_short
class(germany)
class(germany$party_short)
nacional_results %>% arrange(-order)
nacional_results$order <- NA
nacional_results$order[nacional_results$Party == "PSOE"] <- 1
nacional_results$order[nacional_results$Party == "UP"] <- 2
nacional_results$order[nacional_results$Party == "ERC-CATSÍ"] <- 3
nacional_results$order[nacional_results$Party == "CDC"] <- 4
nacional_results$order[nacional_results$Party == "EAJ-PNV"] <- 5
nacional_results$order[nacional_results$Party == "EH-Bildu"] <- 6
nacional_results$order[nacional_results$Party == "CCa-PNC"] <- 7
nacional_results$order[nacional_results$Party == "C's"] <- 8
nacional_results$order[nacional_results$Party == "VOX"] <- 9
nacional_results$order[nacional_results$Party == "PP"] <- 10
nacional_results %>% arrange(-order)
nacional_results %>% arrange(order)
nacional_results$order <- NA
nacional_results$order[nacional_results$Party == "PSOE"] <- 1
nacional_results$order[nacional_results$Party == "UP"] <- 2
nacional_results$order[nacional_results$Party == "ERC-CATSÍ"] <- 3
nacional_results$order[nacional_results$Party == "CDC"] <- 4
nacional_results$order[nacional_results$Party == "EAJ-PNV"] <- 5
nacional_results$order[nacional_results$Party == "EH.Bildu"] <- 6
nacional_results$order[nacional_results$Party == "CCa-PNC"] <- 7
nacional_results$order[nacional_results$Party == "C's"] <- 8
nacional_results$order[nacional_results$Party == "VOX"] <- 9
nacional_results$order[nacional_results$Party == "PP"] <- 10
nacional_results %>% arrange(order)
nacional_results$Party <- as.character(nacional_results$Party)
nacional_results$order <- NA
nacional_results$order[nacional_results$Party == "PSOE"] <- 1
nacional_results$order[nacional_results$Party == "UP"] <- 2
nacional_results$order[nacional_results$Party == "ERC-CATSÍ"] <- 3
nacional_results$order[nacional_results$Party == "CDC"] <- 4
nacional_results$order[nacional_results$Party == "EAJ-PNV"] <- 5
nacional_results$order[nacional_results$Party == "EH.Bildu"] <- 6
nacional_results$order[nacional_results$Party == "CCa-PNC"] <- 7
nacional_results$order[nacional_results$Party == "C's"] <- 8
nacional_results$order[nacional_results$Party == "VOX"] <- 9
nacional_results$order[nacional_results$Party == "PP"] <- 10
nacional_results <- nacional_results %>% arrange(order)
#nacional_results$Party <- factor(nacional_results$Party, levels = c("PSOE", "UP", "ERC-CATSÍ", "CDC", "EAJ-PNV", "EH.Bildu", "CCa-PNC", "C's", "VOX", "PP"))
nacional_results$color <- NA
nacional_results$Party
library(elecciones)
library(tidyverse)
library(SciencesPo)
library(electoral)
# Importo los datos
seats <- readxl::read_xlsx("~/Google Drive/DATOS/R/SIMULACION ELECCIONES/shinyapp/data/26J_seats.xlsx")  # Reparto de escaños por provincias
provincias <- readr::read_csv("~/Google Drive/DATOS/R/SIMULACION ELECCIONES/shinyapp/data/votoprovincias26J.csv") # Resultados 26J
pond <- readxl::read_xlsx("~/Google Drive/DATOS/R/SIMULACION ELECCIONES/shinyapp/data/ponderaciones encuestas.xlsx") # Tabla con el promedio de las encuestas y los resultados agregados a nivel nacional
# Creo un array con los ids de los partidos
parties <- unique(provincias$siglas)
parties <- parties[parties != "VOX"] # <- (sin VOX porque tiene un tratamiento especial)
# Creo dos columnas vacias.
# 1) En una almacenaré las variaciones procentuales de cada partido entre su media nacional y sus resultados en las provincias
# 2) En la otra almacenaré el resultado de aplicar estos swings provinciales al promedio de las encuestas (o más bien a los inputs introducidos en la shiny app)
provincias$var.media.nacional <- NA
provincias$sobrevalido2019 <- NA
## BUCLE 1: CALCULO EL PRONÓSTICO PARA CADA PROVINCIA EN FUNCIÓN DEL PROMEDIO DE LAS ENCUESTAS Y LOS SWINGS DE CADA PARATIDO
for (p in parties) {
# Calculo el swing provincial con los datos de las elecciones de 2016
provincias$var.media.nacional[provincias$siglas == p] <- provincias$sobrevalido[provincias$siglas == p]*100 - pond$resultados26J[pond$partido == p]
# Escalo los swings en función del promedio de las encuestas (o más bien a los inputs introducidos en la shiny app)
provincias$var.media.nacional[provincias$siglas == p] <- (provincias$var.media.nacional[provincias$siglas == p] * pond$promedio.encuestas[pond$partido == p]) / pond$resultados26J[pond$partido == p]
#aplico los swings al promedio de las encuestas (o más bien a los inputs introducidos en la shiny app)
provincias$sobrevalido2019[provincias$siglas == p] <- (pond$promedio.encuestas[pond$partido == p]  + provincias$var.media.nacional[provincias$siglas == p]) / 100
print(p)
print(provincias$sobrevalido2019[provincias$siglas == p])
}
# Tratamiento especial para Vox: No escalo los swings, los aplico directamente al promedio
# porque hay provincias en las que Vox no se presentó y si no lo hago así darían cero.
p <- "VOX"
provincias$var.media.nacional[provincias$siglas == p] <- provincias$sobrevalido[provincias$siglas == p]*100 - pond$resultados26J[pond$partido == p]
provincias$sobrevalido2019[provincias$siglas == p] <- (pond$promedio.encuestas[pond$partido == p]  + provincias$var.media.nacional[provincias$siglas == p]) / 100
# Esto es un seguro, en principio el resultado del bucle no debería darle votos
# a estos partidos en otras provincias fuera de su territorio, pero por si acaso.
provincias$sobrevalido2019[provincias$siglas %in% c("EAJ-PNV", "EH.Bildu") & provincias$Nombre.de.Comunidad != "País Vasco"] <- 0
provincias$sobrevalido2019[provincias$siglas %in% c("CDC", "ERC-CATSÍ") & provincias$Nombre.de.Comunidad != "Cataluña"] <- 0
provincias$sobrevalido2019[provincias$siglas == "CCa-PNC" & provincias$Nombre.de.Comunidad != "Canarias"] <- 0
# Calculo el número de votos en función de los votos válidos de 2016
provincias$votos2019 <- NA
provincias$votos2019 <- provincias$sobrevalido2019 * provincias$Votos.válidos
provincias$votos2019 <- round(provincias$votos2019, 0)
provincias <- provincias[provincias$votos2019 > 0,]
# Resumen votos2019 nacional (votos)
provincias %>% group_by(siglas) %>%
summarise(votos2019 = sum(votos2019), votos2016 = sum(votos)) %>%
arrange(-votos2019) %>%
mutate(diff = votos2019 - votos2016)
## BUCLE 2: UNA VEZ QUE TENEMOS EL NÚMERO DE VOTOS POR PROVINCIAS DE CADA PARTIDO ITERAMOS POR CADA PROVINCIA PARA HACER EL REPARTO DE ESCAÑOS
results <- NA # Creo in data frame vacío en el que voy a ir acumulando los resultados de cada provincia
provs <- unique(provincias$Código.de.Provincia) # Creo un array con los códigos de las provincias para que itere por ellos el bucle
for (p in provs) {
parties <- provincias$siglas[provincias$Código.de.Provincia == p] # Crea un objeto con los partidos en la provincia p
votos <- provincias$votos2019[provincias$Código.de.Provincia == p] # Crea un objeto con los votos a los partidos de la provincia p
escaños <- seats$seats[seats$code == p] # Crea un objeto con el número de escaños a repartir en la provincia p
prov <- seats$prov[seats$code == p] # Crea un objeto con el nombre de la provincia p
d <- seats_ha(parties = parties,
votes = votos,
n_seats = escaños,
method = "dhondt")
data <- tibble(cod.prov = p,
provincia = prov,
Party = names(d),
Seats = as.numeric(d))
# Unimos el resultado con el data frame vacío que hemos creado al principio, pero la segunda
# y sucesivas veces que itere el bucle ya no estará vacío, sino que irá acumulando cada una de las provincias
results <- rbind(results, data)
}
results <- results[-1,] # Le quitamos la primera fila al data frame acumulado porque al crear el objeto vacía hay una linea con NAs
# AGREGACION DE RESULTADOS
provs <- provincias[, c(1,2,3)]
provs <- provs[!duplicated(provs$Código.de.Provincia),]
results <- merge(results, provs, by.x = "cod.prov", by.y = "Código.de.Provincia", all = T)
ccaa <- results %>% group_by(Nombre.de.Comunidad, Party) %>% summarise(seats = sum(Seats))
ccaa_results <- spread(ccaa, "Party", "seats") # A nivel de CCA (escaños)
prov_results <- spread(results, key = "Party", value = "Seats") # A nivel de provincia (escaños)
nacional_results <- results %>% group_by(Party) %>% summarise(seats = sum(Seats)) %>% arrange(-seats) # A nivel nacional (escaños)
nacional_results_votos <- provincias %>% group_by(siglas) %>% summarise(votos2019 = sum(votos2019), votos2016 = sum(votos)) %>% arrange(-votos2019) %>% mutate(diff = votos2019 - votos2016) # A nivel nacional (votos)
# Imprimo los resultados
nacional_results_votos
nacional_results
ccaa_results
prov_results
nacional_results
color <- c("#EF1C25", "#612d62", "#C10F19", "#242E7C", "#00914A", "#B1CE00", "#FFDD02", "#FB5000", "#66bc29", "#03A2DD")
nacional_results$color <- NA
nacional_results$color[nacional_results$Party == "PSOE"] <- color[1]
nacional_results$color[nacional_results$Party == "UP"] <- color[2]
nacional_results$color[nacional_results$Party == "ERC-CATSÍ"] <- color[3]
nacional_results$color[nacional_results$Party == "CDC"] <- color[4]
nacional_results$color[nacional_results$Party == "EAJ-PNV"] <- color[5]
nacional_results$color[nacional_results$Party == "EH.Bildu"] <- color[6]
nacional_results$color[nacional_results$Party == "CCa-PNC"] <- color[7]
nacional_results$color[nacional_results$Party == "C's"] <- color[8]
nacional_results$color[nacional_results$Party == "VOX"] <- color[9]
nacional_results$color[nacional_results$Party == "PP"] <- color[10]
nacional_results$Party <- factor(nacional_results$Party, levels = c("PSOE", "UP", "ERC-CATSÍ", "CDC", "EAJ-PNV", "EH.Bildu", "CCa-PNC", "C's", "VOX", "PP"))
congreso <- parliament_data(election_data = nacional_results,
type = "semicircle",
parl_rows = 10,
party_seats = nacional_results$seats)
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = as.character(congreso$Party) )
representatives
nacional_results$Party <- factor(nacional_results$Party, levels = c("PSOE", "UP", "ERC-CATSÍ", "CDC", "EAJ-PNV", "EH.Bildu", "CCa-PNC", "C's", "VOX", "PP"), ordered = T)
congreso <- parliament_data(election_data = nacional_results,
type = "semicircle",
parl_rows = 10,
party_seats = nacional_results$seats)
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = as.character(congreso$Party) )
representatives
library(elecciones)
library(tidyverse)
library(SciencesPo)
library(electoral)
# Importo los datos
seats <- readxl::read_xlsx("~/Google Drive/DATOS/R/SIMULACION ELECCIONES/shinyapp/data/26J_seats.xlsx")  # Reparto de escaños por provincias
provincias <- readr::read_csv("~/Google Drive/DATOS/R/SIMULACION ELECCIONES/shinyapp/data/votoprovincias26J.csv") # Resultados 26J
pond <- readxl::read_xlsx("~/Google Drive/DATOS/R/SIMULACION ELECCIONES/shinyapp/data/ponderaciones encuestas.xlsx") # Tabla con el promedio de las encuestas y los resultados agregados a nivel nacional
# Creo un array con los ids de los partidos
parties <- unique(provincias$siglas)
parties <- parties[parties != "VOX"] # <- (sin VOX porque tiene un tratamiento especial)
# Creo dos columnas vacias.
# 1) En una almacenaré las variaciones procentuales de cada partido entre su media nacional y sus resultados en las provincias
# 2) En la otra almacenaré el resultado de aplicar estos swings provinciales al promedio de las encuestas (o más bien a los inputs introducidos en la shiny app)
provincias$var.media.nacional <- NA
provincias$sobrevalido2019 <- NA
## BUCLE 1: CALCULO EL PRONÓSTICO PARA CADA PROVINCIA EN FUNCIÓN DEL PROMEDIO DE LAS ENCUESTAS Y LOS SWINGS DE CADA PARATIDO
for (p in parties) {
# Calculo el swing provincial con los datos de las elecciones de 2016
provincias$var.media.nacional[provincias$siglas == p] <- provincias$sobrevalido[provincias$siglas == p]*100 - pond$resultados26J[pond$partido == p]
# Escalo los swings en función del promedio de las encuestas (o más bien a los inputs introducidos en la shiny app)
provincias$var.media.nacional[provincias$siglas == p] <- (provincias$var.media.nacional[provincias$siglas == p] * pond$promedio.encuestas[pond$partido == p]) / pond$resultados26J[pond$partido == p]
#aplico los swings al promedio de las encuestas (o más bien a los inputs introducidos en la shiny app)
provincias$sobrevalido2019[provincias$siglas == p] <- (pond$promedio.encuestas[pond$partido == p]  + provincias$var.media.nacional[provincias$siglas == p]) / 100
print(p)
print(provincias$sobrevalido2019[provincias$siglas == p])
}
# Tratamiento especial para Vox: No escalo los swings, los aplico directamente al promedio
# porque hay provincias en las que Vox no se presentó y si no lo hago así darían cero.
p <- "VOX"
provincias$var.media.nacional[provincias$siglas == p] <- provincias$sobrevalido[provincias$siglas == p]*100 - pond$resultados26J[pond$partido == p]
provincias$sobrevalido2019[provincias$siglas == p] <- (pond$promedio.encuestas[pond$partido == p]  + provincias$var.media.nacional[provincias$siglas == p]) / 100
# Esto es un seguro, en principio el resultado del bucle no debería darle votos
# a estos partidos en otras provincias fuera de su territorio, pero por si acaso.
provincias$sobrevalido2019[provincias$siglas %in% c("EAJ-PNV", "EH.Bildu") & provincias$Nombre.de.Comunidad != "País Vasco"] <- 0
provincias$sobrevalido2019[provincias$siglas %in% c("CDC", "ERC-CATSÍ") & provincias$Nombre.de.Comunidad != "Cataluña"] <- 0
provincias$sobrevalido2019[provincias$siglas == "CCa-PNC" & provincias$Nombre.de.Comunidad != "Canarias"] <- 0
# Calculo el número de votos en función de los votos válidos de 2016
provincias$votos2019 <- NA
provincias$votos2019 <- provincias$sobrevalido2019 * provincias$Votos.válidos
provincias$votos2019 <- round(provincias$votos2019, 0)
provincias <- provincias[provincias$votos2019 > 0,]
# Resumen votos2019 nacional (votos)
provincias %>% group_by(siglas) %>%
summarise(votos2019 = sum(votos2019), votos2016 = sum(votos)) %>%
arrange(-votos2019) %>%
mutate(diff = votos2019 - votos2016)
## BUCLE 2: UNA VEZ QUE TENEMOS EL NÚMERO DE VOTOS POR PROVINCIAS DE CADA PARTIDO ITERAMOS POR CADA PROVINCIA PARA HACER EL REPARTO DE ESCAÑOS
results <- NA # Creo in data frame vacío en el que voy a ir acumulando los resultados de cada provincia
provs <- unique(provincias$Código.de.Provincia) # Creo un array con los códigos de las provincias para que itere por ellos el bucle
for (p in provs) {
parties <- provincias$siglas[provincias$Código.de.Provincia == p] # Crea un objeto con los partidos en la provincia p
votos <- provincias$votos2019[provincias$Código.de.Provincia == p] # Crea un objeto con los votos a los partidos de la provincia p
escaños <- seats$seats[seats$code == p] # Crea un objeto con el número de escaños a repartir en la provincia p
prov <- seats$prov[seats$code == p] # Crea un objeto con el nombre de la provincia p
d <- seats_ha(parties = parties,
votes = votos,
n_seats = escaños,
method = "dhondt")
data <- tibble(cod.prov = p,
provincia = prov,
Party = names(d),
Seats = as.numeric(d))
# Unimos el resultado con el data frame vacío que hemos creado al principio, pero la segunda
# y sucesivas veces que itere el bucle ya no estará vacío, sino que irá acumulando cada una de las provincias
results <- rbind(results, data)
}
results <- results[-1,] # Le quitamos la primera fila al data frame acumulado porque al crear el objeto vacía hay una linea con NAs
# AGREGACION DE RESULTADOS
provs <- provincias[, c(1,2,3)]
provs <- provs[!duplicated(provs$Código.de.Provincia),]
results <- merge(results, provs, by.x = "cod.prov", by.y = "Código.de.Provincia", all = T)
ccaa <- results %>% group_by(Nombre.de.Comunidad, Party) %>% summarise(seats = sum(Seats))
ccaa_results <- spread(ccaa, "Party", "seats") # A nivel de CCA (escaños)
prov_results <- spread(results, key = "Party", value = "Seats") # A nivel de provincia (escaños)
nacional_results <- results %>% group_by(Party) %>% summarise(seats = sum(Seats)) %>% arrange(-seats) # A nivel nacional (escaños)
nacional_results_votos <- provincias %>% group_by(siglas) %>% summarise(votos2019 = sum(votos2019), votos2016 = sum(votos)) %>% arrange(-votos2019) %>% mutate(diff = votos2019 - votos2016) # A nivel nacional (votos)
# Imprimo los resultados
nacional_results_votos
nacional_results
ccaa_results
prov_results
nacional_results$order <- NA
nacional_results$order[nacional_results$Party == "PSOE"] <- 1
nacional_results$order[nacional_results$Party == "UP"] <- 2
nacional_results$order[nacional_results$Party == "ERC-CATSÍ"] <- 3
nacional_results$order[nacional_results$Party == "CDC"] <- 4
nacional_results$order[nacional_results$Party == "EAJ-PNV"] <- 5
nacional_results$order[nacional_results$Party == "EH.Bildu"] <- 6
nacional_results$order[nacional_results$Party == "CCa-PNC"] <- 7
nacional_results$order[nacional_results$Party == "C's"] <- 8
nacional_results$order[nacional_results$Party == "VOX"] <- 9
nacional_results$order[nacional_results$Party == "PP"] <- 10
color <- c("#EF1C25", "#612d62", "#C10F19", "#242E7C", "#00914A", "#B1CE00", "#FFDD02", "#FB5000", "#66bc29", "#03A2DD")
nacional_results$color <- NA
nacional_results$color[nacional_results$Party == "PSOE"] <- color[1]
nacional_results$color[nacional_results$Party == "UP"] <- color[2]
nacional_results$color[nacional_results$Party == "ERC-CATSÍ"] <- color[3]
nacional_results$color[nacional_results$Party == "CDC"] <- color[4]
nacional_results$color[nacional_results$Party == "EAJ-PNV"] <- color[5]
nacional_results$color[nacional_results$Party == "EH.Bildu"] <- color[6]
nacional_results$color[nacional_results$Party == "CCa-PNC"] <- color[7]
nacional_results$color[nacional_results$Party == "C's"] <- color[8]
nacional_results$color[nacional_results$Party == "VOX"] <- color[9]
nacional_results$color[nacional_results$Party == "PP"] <- color[10]
nacional_results <- nacional_results %>% arrange(order)
congreso <- parliament_data(election_data = nacional_results,
type = "semicircle",
parl_rows = 10,
party_seats = nacional_results$seats)
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = as.character(congreso$Party) )
representatives
congreso <- parliament_data(election_data = nacional_results,
type = "semicircle",
parl_rows = 8,
party_seats = nacional_results$seats)
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = as.character(congreso$Party) )
representatives
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament(border = T) +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = as.character(congreso$Party) )
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament(family = "Roboto Condensed") +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = as.character(congreso$Party) )
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() + theme(family = "Roboto Condensed")
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() + theme(text = element_text(family = "Roboto Condensed")) +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = as.character(congreso$Party) )
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() + theme(text = element_text(family = "Roboto Condensed"),
plot.title = element_text(face = "bold")) +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = as.character(congreso$Party) )
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = F, type = 'semicircle') +
theme_ggparliament() + theme(text = element_text(family = "Roboto Condensed"),
plot.title = element_text(face = "bold")) +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = as.character(congreso$Party) )
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() + theme(text = element_text(family = "Roboto Condensed"),
plot.title = element_text(face = "bold")) +
labs(colour = NULL,
title = "Congreso de los diputados") +
geom_parliament_bar(colour = color, party = Party) +
scale_colour_manual(values = congreso$color, limits = as.character(congreso$Party) )
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() + theme(text = element_text(family = "Roboto Condensed"),
plot.title = element_text(face = "bold")) +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color)
representatives
representatives <- ggplot(congreso, aes(x, y, colour = Party)) +
geom_parliament_seats() +
draw_majoritythreshold(n = 175, label = TRUE, type = 'semicircle') +
theme_ggparliament() + theme(text = element_text(family = "Roboto Condensed"),
plot.title = element_text(face = "bold")) +
labs(colour = NULL,
title = "Congreso de los diputados") +
scale_colour_manual(values = congreso$color, limits = congreso$Party)
representatives
shiny::runApp('Google Drive/DATOS/R/SIMULACION ELECCIONES/shinyapp')
font_import()
fonts()
fonts
fonttable()
font_install()
font_import()
runApp('Google Drive/DATOS/R/SIMULACION ELECCIONES/shinyapp')
runApp('Google Drive/DATOS/R/SIMULACION ELECCIONES/shinyapp')
extrafont::embed_fonts()
names(pdfFonts())
runApp('Google Drive/DATOS/R/SIMULACION ELECCIONES/shinyapp')
names(pdfFonts())
runApp('Google Drive/DATOS/R/SIMULACION ELECCIONES/shinyapp')
